theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle("clone name") +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1))
plot(ggplot2::ggplot(test, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle("clone name") +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 3))
plot(ggplot2::ggplot(test, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle("clone name") +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2))
plasmid <- c("MULTISPECIES: type A-1 chloramphenicol O-acetyltransferase ", "MULTISPECIES: replication initiation protein ", "MULTISPECIES: protein SopA", "MULTISPECIES: protein SopB ", "ParB/RepB/Spo0J family plasmid partition protein ", "ParB/RepB/Spo0J family plasmid partition protein, partial ", "MULTISPECIES: resolvase ")
transposon <- c("MULTISPECIES: ANT(3'')-Ia family aminoglycoside nucleotidyltransferase AadA1 ", "MULTISPECIES: tetracycline efflux MFS transporter Tet(C) ", "AadA family aminoglycoside 3''-O-nucleotidyltransferase, partial ")
gfp <- c("MULTISPECIES: green fluorescent protein ")
df <- read.csv("../dataflow/03-blast-tables/single_fosmids_refseq_prot.csv") %>%
separate(header, into = c("header", "start", "stop", "strand",  "prodigal_info"), sep = "#") %>%
rename(id = X) %>%
rowwise() %>%
mutate(gene_number = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][1])) %>%
mutate(clone_contig = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][2])) %>%
mutate(start_dir = ifelse(strand == " 1 ", start, stop)) %>%
mutate(stop_dir = ifelse(strand == " 1 ", stop, start)) %>%
mutate(taxa = sub("\\].*", "", sub(".*\\[", "", sseq_description))) %>%
mutate(annotation_clean = stri_split_fixed(sseq_description,"[",n = 2)[[1]][1]) %>%
mutate(gene_colour = ifelse(annotation_clean %in% gfp, "gfp",
ifelse(annotation_clean %in% plasmid, "plasmid",
ifelse(annotation_clean %in% transposon, "transposon", "other")))) %>%
separate(clone_contig, into=c("clone", "contig"), sep = "_seq", remove = FALSE) %>%
unite(gene_label, c("gene_number", "gene_colour"), sep = ": ", remove = FALSE)
df$gene_number <- as.factor(as.numeric(df$gene_number))
df$start_dir <- as.numeric(df$start_dir)
df$stop_dir <- as.numeric(df$stop_dir)
df$contig <- as.character(as.numeric(df$contig))
files <- list.files("../dataflow/03-blast-tables")
pcc1_transposon_files <- files[grep("_pcc1_transposon_nucl", files)]
df_trans_list <- list()
l <- 1
for (file in pcc1_transposon_files){
df_trans <- read.table(paste("../dataflow/03-blast-tables/", file, sep = ""), header = FALSE, )
df_trans_list[[l]] <- df_trans
l <- l+1
}
df_trans <- bind_rows(df_trans_list)
colnames(df_trans) <- c("clone_contig", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length")
df_trans <- df_trans %>%
select(clone_contig, sseqid, qstart, qend)
clone_dfs <- list()
i <- 1
for (clone_id in unique(df$clone)){
clone_df <- df %>%
filter(clone == clone_id) %>%
inner_join(df_trans)
clone_dfs[[i]] <- clone_df
i <- i+1
}
test <- clone_dfs[[1]] %>%
filter(contig == "1")
unique(test$gene_colour)
transposon = "lightgreen"
plasmid = "violetred2"
other = "yellow1"
c2 <- c(transposon, plasmid, other)
names(c2) <- c("transposon", "plasmid", "other")
# diagram test
plot(ggplot2::ggplot(test, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle("clone name") +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2))
#ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
plasmid <- c("MULTISPECIES: type A-1 chloramphenicol O-acetyltransferase ", "MULTISPECIES: replication initiation protein ", "MULTISPECIES: protein SopA", "MULTISPECIES: protein SopB ", "ParB/RepB/Spo0J family plasmid partition protein ", "ParB/RepB/Spo0J family plasmid partition protein, partial ", "MULTISPECIES: resolvase ")
transposon <- c("MULTISPECIES: ANT(3'')-Ia family aminoglycoside nucleotidyltransferase AadA1 ", "MULTISPECIES: tetracycline efflux MFS transporter Tet(C) ", "AadA family aminoglycoside 3''-O-nucleotidyltransferase, partial ", "MULTISPECIES: hypothetical protein ")
gfp <- c("MULTISPECIES: green fluorescent protein ")
df <- read.csv("../dataflow/03-blast-tables/single_fosmids_refseq_prot.csv") %>%
separate(header, into = c("header", "start", "stop", "strand",  "prodigal_info"), sep = "#") %>%
rename(id = X) %>%
rowwise() %>%
mutate(gene_number = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][1])) %>%
mutate(clone_contig = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][2])) %>%
mutate(start_dir = ifelse(strand == " 1 ", start, stop)) %>%
mutate(stop_dir = ifelse(strand == " 1 ", stop, start)) %>%
mutate(taxa = sub("\\].*", "", sub(".*\\[", "", sseq_description))) %>%
mutate(annotation_clean = stri_split_fixed(sseq_description,"[",n = 2)[[1]][1]) %>%
mutate(gene_colour = ifelse(annotation_clean %in% gfp, "gfp",
ifelse(annotation_clean %in% plasmid, "plasmid",
ifelse(annotation_clean %in% transposon, "transposon", "other")))) %>%
separate(clone_contig, into=c("clone", "contig"), sep = "_seq", remove = FALSE) %>%
unite(gene_label, c("gene_number", "gene_colour"), sep = ": ", remove = FALSE)
df$gene_number <- as.factor(as.numeric(df$gene_number))
df$start_dir <- as.numeric(df$start_dir)
df$stop_dir <- as.numeric(df$stop_dir)
df$contig <- as.character(as.numeric(df$contig))
files <- list.files("../dataflow/03-blast-tables")
pcc1_transposon_files <- files[grep("_pcc1_transposon_nucl", files)]
df_trans_list <- list()
l <- 1
for (file in pcc1_transposon_files){
df_trans <- read.table(paste("../dataflow/03-blast-tables/", file, sep = ""), header = FALSE, )
df_trans_list[[l]] <- df_trans
l <- l+1
}
df_trans <- bind_rows(df_trans_list)
colnames(df_trans) <- c("clone_contig", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length")
df_trans <- df_trans %>%
select(clone_contig, sseqid, qstart, qend)
clone_dfs <- list()
i <- 1
for (clone_id in unique(df$clone)){
clone_df <- df %>%
filter(clone == clone_id) %>%
inner_join(df_trans)
clone_dfs[[i]] <- clone_df
i <- i+1
}
test <- clone_dfs[[1]] %>%
filter(contig == "1")
unique(test$gene_colour)
transposon = "lightgreen"
plasmid = "violetred2"
other = "yellow1"
c2 <- c(transposon, plasmid, other)
names(c2) <- c("transposon", "plasmid", "other")
# diagram test
plot(ggplot2::ggplot(test, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle("clone name") +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2))
#ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
plasmid <- c("MULTISPECIES: type A-1 chloramphenicol O-acetyltransferase ", "MULTISPECIES: replication initiation protein ", "MULTISPECIES: protein SopA", "MULTISPECIES: protein SopB ", "ParB/RepB/Spo0J family plasmid partition protein ", "ParB/RepB/Spo0J family plasmid partition protein, partial ", "MULTISPECIES: resolvase "," MULTISPECIES: protein SopA ")
transposon <- c("MULTISPECIES: ANT(3'')-Ia family aminoglycoside nucleotidyltransferase AadA1 ", "MULTISPECIES: tetracycline efflux MFS transporter Tet(C) ", "AadA family aminoglycoside 3''-O-nucleotidyltransferase, partial ", "MULTISPECIES: hypothetical protein ")
gfp <- c("MULTISPECIES: green fluorescent protein ")
df <- read.csv("../dataflow/03-blast-tables/single_fosmids_refseq_prot.csv") %>%
separate(header, into = c("header", "start", "stop", "strand",  "prodigal_info"), sep = "#") %>%
rename(id = X) %>%
rowwise() %>%
mutate(gene_number = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][1])) %>%
mutate(clone_contig = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][2])) %>%
mutate(start_dir = ifelse(strand == " 1 ", start, stop)) %>%
mutate(stop_dir = ifelse(strand == " 1 ", stop, start)) %>%
mutate(taxa = sub("\\].*", "", sub(".*\\[", "", sseq_description))) %>%
mutate(annotation_clean = stri_split_fixed(sseq_description,"[",n = 2)[[1]][1]) %>%
mutate(gene_colour = ifelse(annotation_clean %in% gfp, "gfp",
ifelse(annotation_clean %in% plasmid, "plasmid",
ifelse(annotation_clean %in% transposon, "transposon", "other")))) %>%
separate(clone_contig, into=c("clone", "contig"), sep = "_seq", remove = FALSE) %>%
unite(gene_label, c("gene_number", "gene_colour"), sep = ": ", remove = FALSE)
df$gene_number <- as.factor(as.numeric(df$gene_number))
df$start_dir <- as.numeric(df$start_dir)
df$stop_dir <- as.numeric(df$stop_dir)
df$contig <- as.character(as.numeric(df$contig))
files <- list.files("../dataflow/03-blast-tables")
pcc1_transposon_files <- files[grep("_pcc1_transposon_nucl", files)]
df_trans_list <- list()
l <- 1
for (file in pcc1_transposon_files){
df_trans <- read.table(paste("../dataflow/03-blast-tables/", file, sep = ""), header = FALSE, )
df_trans_list[[l]] <- df_trans
l <- l+1
}
df_trans <- bind_rows(df_trans_list)
colnames(df_trans) <- c("clone_contig", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length")
df_trans <- df_trans %>%
select(clone_contig, sseqid, qstart, qend)
clone_dfs <- list()
i <- 1
for (clone_id in unique(df$clone)){
clone_df <- df %>%
filter(clone == clone_id) %>%
inner_join(df_trans)
clone_dfs[[i]] <- clone_df
i <- i+1
}
test <- clone_dfs[[1]] %>%
filter(contig == "1")
unique(test$gene_colour)
transposon = "lightgreen"
plasmid = "violetred2"
other = "yellow1"
c2 <- c(transposon, plasmid, other)
names(c2) <- c("transposon", "plasmid", "other")
# diagram test
plot(ggplot2::ggplot(test, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle("clone name") +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2))
#ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
plasmid <- c("MULTISPECIES: type A-1 chloramphenicol O-acetyltransferase ", "MULTISPECIES: replication initiation protein ", "MULTISPECIES: protein SopA", "MULTISPECIES: protein SopB ", "ParB/RepB/Spo0J family plasmid partition protein ", "ParB/RepB/Spo0J family plasmid partition protein, partial ", "MULTISPECIES: resolvase ","MULTISPECIES: protein SopA ")
transposon <- c("MULTISPECIES: ANT(3'')-Ia family aminoglycoside nucleotidyltransferase AadA1 ", "MULTISPECIES: tetracycline efflux MFS transporter Tet(C) ", "AadA family aminoglycoside 3''-O-nucleotidyltransferase, partial ", "MULTISPECIES: hypothetical protein ")
gfp <- c("MULTISPECIES: green fluorescent protein ")
df <- read.csv("../dataflow/03-blast-tables/single_fosmids_refseq_prot.csv") %>%
separate(header, into = c("header", "start", "stop", "strand",  "prodigal_info"), sep = "#") %>%
rename(id = X) %>%
rowwise() %>%
mutate(gene_number = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][1])) %>%
mutate(clone_contig = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][2])) %>%
mutate(start_dir = ifelse(strand == " 1 ", start, stop)) %>%
mutate(stop_dir = ifelse(strand == " 1 ", stop, start)) %>%
mutate(taxa = sub("\\].*", "", sub(".*\\[", "", sseq_description))) %>%
mutate(annotation_clean = stri_split_fixed(sseq_description,"[",n = 2)[[1]][1]) %>%
mutate(gene_colour = ifelse(annotation_clean %in% gfp, "gfp",
ifelse(annotation_clean %in% plasmid, "plasmid",
ifelse(annotation_clean %in% transposon, "transposon", "other")))) %>%
separate(clone_contig, into=c("clone", "contig"), sep = "_seq", remove = FALSE) %>%
unite(gene_label, c("gene_number", "gene_colour"), sep = ": ", remove = FALSE)
df$gene_number <- as.factor(as.numeric(df$gene_number))
df$start_dir <- as.numeric(df$start_dir)
df$stop_dir <- as.numeric(df$stop_dir)
df$contig <- as.character(as.numeric(df$contig))
files <- list.files("../dataflow/03-blast-tables")
pcc1_transposon_files <- files[grep("_pcc1_transposon_nucl", files)]
df_trans_list <- list()
l <- 1
for (file in pcc1_transposon_files){
df_trans <- read.table(paste("../dataflow/03-blast-tables/", file, sep = ""), header = FALSE, )
df_trans_list[[l]] <- df_trans
l <- l+1
}
df_trans <- bind_rows(df_trans_list)
colnames(df_trans) <- c("clone_contig", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length")
df_trans <- df_trans %>%
select(clone_contig, sseqid, qstart, qend)
clone_dfs <- list()
i <- 1
for (clone_id in unique(df$clone)){
clone_df <- df %>%
filter(clone == clone_id) %>%
inner_join(df_trans)
clone_dfs[[i]] <- clone_df
i <- i+1
}
test <- clone_dfs[[1]] %>%
filter(contig == "1")
unique(test$gene_colour)
transposon = "lightgreen"
plasmid = "violetred2"
other = "yellow1"
c2 <- c(transposon, plasmid, other)
names(c2) <- c("transposon", "plasmid", "other")
# diagram test
plot(ggplot2::ggplot(test, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle("clone name") +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2))
#ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
library(tidyverse)
library(stringi)
library(ggplot2)
library(gggenes)
library(printr)
library(knitr)
plasmid <- c("MULTISPECIES: type A-1 chloramphenicol O-acetyltransferase ", "MULTISPECIES: replication initiation protein ", "MULTISPECIES: protein SopA", "MULTISPECIES: protein SopB ", "ParB/RepB/Spo0J family plasmid partition protein ", "ParB/RepB/Spo0J family plasmid partition protein, partial ", "MULTISPECIES: resolvase ","MULTISPECIES: protein SopA ")
transposon <- c("MULTISPECIES: ANT(3'')-Ia family aminoglycoside nucleotidyltransferase AadA1 ", "MULTISPECIES: tetracycline efflux MFS transporter Tet(C) ", "AadA family aminoglycoside 3''-O-nucleotidyltransferase, partial ", "MULTISPECIES: hypothetical protein ")
gfp <- c("MULTISPECIES: green fluorescent protein ")
df <- read.csv("../dataflow/03-blast-tables/single_fosmids_refseq_prot.csv") %>%
separate(header, into = c("header", "start", "stop", "strand",  "prodigal_info"), sep = "#") %>%
rename(id = X) %>%
rowwise() %>%
mutate(gene_number = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][1])) %>%
mutate(clone_contig = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][2])) %>%
mutate(start_dir = ifelse(strand == " 1 ", start, stop)) %>%
mutate(stop_dir = ifelse(strand == " 1 ", stop, start)) %>%
mutate(taxa = sub("\\].*", "", sub(".*\\[", "", sseq_description))) %>%
mutate(annotation_clean = stri_split_fixed(sseq_description,"[",n = 2)[[1]][1]) %>%
mutate(gene_colour = ifelse(annotation_clean %in% gfp, "gfp",
ifelse(annotation_clean %in% plasmid, "plasmid",
ifelse(annotation_clean %in% transposon, "transposon", "other")))) %>%
separate(clone_contig, into=c("clone", "contig"), sep = "_seq", remove = FALSE) %>%
unite(gene_label, c("gene_number", "gene_colour"), sep = ": ", remove = FALSE)
df$gene_number <- as.factor(as.numeric(df$gene_number))
df$start_dir <- as.numeric(df$start_dir)
df$stop_dir <- as.numeric(df$stop_dir)
df$contig <- as.character(as.numeric(df$contig))
files <- list.files("../dataflow/03-blast-tables")
pcc1_transposon_files <- files[grep("_pcc1_transposon_nucl", files)]
df_trans_list <- list()
l <- 1
for (file in pcc1_transposon_files){
df_trans <- read.table(paste("../dataflow/03-blast-tables/", file, sep = ""), header = FALSE, )
df_trans_list[[l]] <- df_trans
l <- l+1
}
df_trans <- bind_rows(df_trans_list)
colnames(df_trans) <- c("clone_contig", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length")
df_trans <- df_trans %>%
select(clone_contig, sseqid, qstart, qend)
clone_dfs <- list()
i <- 1
for (clone_id in unique(df$clone)){
clone_df <- df %>%
filter(clone == clone_id) %>%
inner_join(df_trans)
clone_dfs[[i]] <- clone_df
i <- i+1
}
test <- clone_dfs[[1]] %>%
filter(contig == "1")
unique(test$gene_colour)
transposon = "lightgreen"
plasmid = "violetred2"
other = "yellow1"
c2 <- c(transposon, plasmid, other)
names(c2) <- c("transposon", "plasmid", "other")
# diagram test
#   plot(ggplot2::ggplot(contig_to_plot, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
#                                             contig, fill = gene_colour, label = gene_number)) +
#   geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
#   geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
# padding.y = grid::unit(0, "lines")) +
#   ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
#   theme_genes() +
#   ggplot2::scale_fill_manual(values=c2) +
#   ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
#   theme(plot.title = element_text(size = 30, face = "bold")) +
#  geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2))
#ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
for (j in 1:51) {
data_to_plot <- clone_dfs[[j]]
for (con in unique(data_to_plot$contig)){
contig_to_plot <- data_to_plot %>%
filter(contig == con)
plot(ggplot2::ggplot(contig_to_plot, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2))
}
table <- data_to_plot %>%
filter(gene_colour == "other") %>%
mutate(annotation = substr(annotation_clean, 1, 50)) %>%
select(gene_number, contig, annotation, taxa)
table <- as.data.frame(table)
print(kable(table))
cat("\n\n\\pagebreak\n")
}
View(contig_to_plot)
View(df_trans)
df_trans <- bind_rows(df_trans_list)
View(df_trans)
colnames(df_trans) <- c("clone_contig", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length")
View(df_trans)
df_trans <- df_trans %>%
filter(length > 500) %>%
select(clone_contig, sseqid, qstart, qend)
plot(ggplot2::ggplot(contig_to_plot, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2))
plot(ggplot2::ggplot(contig_to_plot, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2)) +
guides(colour=guide_legend(nrow=2))
View(clone_df)
unique(clone_df$sseqid)
library(tidyverse)
library(stringi)
library(ggplot2)
library(gggenes)
library(printr)
library(knitr)
plasmid <- c("MULTISPECIES: type A-1 chloramphenicol O-acetyltransferase ", "MULTISPECIES: replication initiation protein ", "MULTISPECIES: protein SopA", "MULTISPECIES: protein SopB ", "ParB/RepB/Spo0J family plasmid partition protein ", "ParB/RepB/Spo0J family plasmid partition protein, partial ", "MULTISPECIES: resolvase ","MULTISPECIES: protein SopA ")
transposon <- c("MULTISPECIES: ANT(3'')-Ia family aminoglycoside nucleotidyltransferase AadA1 ", "MULTISPECIES: tetracycline efflux MFS transporter Tet(C) ", "AadA family aminoglycoside 3''-O-nucleotidyltransferase, partial ", "MULTISPECIES: hypothetical protein ")
gfp <- c("MULTISPECIES: green fluorescent protein ")
df <- read.csv("../dataflow/03-blast-tables/single_fosmids_refseq_prot.csv") %>%
separate(header, into = c("header", "start", "stop", "strand",  "prodigal_info"), sep = "#") %>%
rename(id = X) %>%
rowwise() %>%
mutate(gene_number = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][1])) %>%
mutate(clone_contig = stri_reverse(stri_split_fixed(stri_reverse(id),"_",n = 2)[[1]][2])) %>%
mutate(start_dir = ifelse(strand == " 1 ", start, stop)) %>%
mutate(stop_dir = ifelse(strand == " 1 ", stop, start)) %>%
mutate(taxa = sub("\\].*", "", sub(".*\\[", "", sseq_description))) %>%
mutate(annotation_clean = stri_split_fixed(sseq_description,"[",n = 2)[[1]][1]) %>%
mutate(gene_colour = ifelse(annotation_clean %in% gfp, "gfp",
ifelse(annotation_clean %in% plasmid, "plasmid",
ifelse(annotation_clean %in% transposon, "transposon", "other")))) %>%
separate(clone_contig, into=c("clone", "contig"), sep = "_seq", remove = FALSE) %>%
unite(gene_label, c("gene_number", "gene_colour"), sep = ": ", remove = FALSE)
df$gene_number <- as.factor(as.numeric(df$gene_number))
df$start_dir <- as.numeric(df$start_dir)
df$stop_dir <- as.numeric(df$stop_dir)
df$contig <- as.character(as.numeric(df$contig))
files <- list.files("../dataflow/03-blast-tables")
pcc1_transposon_files <- files[grep("_pcc1_transposon_nucl", files)]
df_trans_list <- list()
l <- 1
for (file in pcc1_transposon_files){
df_trans <- read.table(paste("../dataflow/03-blast-tables/", file, sep = ""), header = FALSE, )
df_trans_list[[l]] <- df_trans
l <- l+1
}
df_trans <- bind_rows(df_trans_list)
colnames(df_trans) <- c("clone_contig", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length")
df_trans <- df_trans %>%
filter(length > 500) %>%
select(clone_contig, sseqid, qstart, qend)
clone_dfs <- list()
i <- 1
for (clone_id in unique(df$clone)){
clone_df <- df %>%
filter(clone == clone_id) %>%
inner_join(df_trans)
clone_dfs[[i]] <- clone_df
i <- i+1
}
test <- clone_dfs[[1]] %>%
filter(contig == "1")
transposon = "green"
plasmid = "violetred2"
other = "yellow1"
gfp = "lightgreen"
c2 <- c(transposon, plasmid, other, gfp)
names(c2) <- c("transposon", "plasmid", "other", "gfp")
transposon2 = "darkgreen"
plasmid2 = "red4"
c3 <- c(transposon2, plasmid2)
names(c3) <- c("transposon_b0032_gemini_aada_tet", "pcc1fos")
for (j in 1:60) {
data_to_plot <- clone_dfs[[j]]
for (con in unique(data_to_plot$contig)){
contig_to_plot <- data_to_plot %>%
filter(contig == con)
plot(ggplot2::ggplot(contig_to_plot, ggplot2::aes(xmin = start_dir, xmax = stop_dir, y =
contig, fill = gene_colour, label = gene_number)) +
geom_gene_arrow(arrowhead_height = unit(15, "mm"), arrowhead_width = unit(3, "mm"), arrow_body_height = unit(15, "mm")) +
geom_gene_label(align = "center", height = grid::unit(15, "mm"), padding.x = grid::unit(0, "mm"),
padding.y = grid::unit(0, "lines")) +
ggplot2::facet_wrap(. ~ contig, scales = "free", ncol = 1) +
theme_genes() +
ggplot2::scale_fill_manual(values=c2) +
ggtitle(paste(unique(data_to_plot$clone), " contig ", con)) +
theme(plot.title = element_text(size = 30, face = "bold")) +
geom_curve(aes(x = qstart, y = 1, xend = qend, yend = 1, colour = sseqid), curvature = 0.1, size = 2) +
scale_colour_manual(values=c3) +
theme(legend.direction = "vertical",
legend.position = "right",
legend.box = "horizontal"
))
}
cat("\n\n\n")
table <- data_to_plot %>%
filter(gene_colour == "other") %>%
mutate(annotation = substr(annotation_clean, 1, 50)) %>%
mutate(taxa = substr(taxa, 1, 25)) %>%
select(gene_number, contig, annotation, taxa) %>%
rename(gene = gene_number)
table <- as.data.frame(table)
print(kable(table, caption = paste(unique(contig_to_plot$clone))))
cat("\n\n\\pagebreak\n")
}
